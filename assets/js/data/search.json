[ { "title": "", "url": "/posts/2022-06-25-C++-static-members/", "categories": "", "tags": "", "date": "2023-05-11 03:26:28 +0000", "snippet": "premise: Static members in a class.note: The static keyword is only used with the declaration of a static member, inside the class definition, but not with the definition of that static member; class X {public: static int n; // declaration, incomplete type static void f(); // declaration, incomplete type};int X::n = 1; // definition, complete typevoid X::f() {n = 1;} // definition, complete type Static members obey the class member access rules (private, protected, public);" }, { "title": "Median of Two Sorted Arrays", "url": "/posts/Median-of-Two-Sorted-Arrays/", "categories": "Leetcode", "tags": "", "date": "2022-06-19 00:00:00 +0000", "snippet": "https://leetcode.cn/problems/median-of-two-sorted-arrays/Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.The overall run time complexity should be O(log (m+n)).class Solution {public: double findMedianSortedArrays(vector&amp;lt;int&amp;gt;&amp;amp; nums1, vector&amp;lt;int&amp;gt;&amp;amp; nums2) { // make nums1 is the shorter array if (nums1.size() &amp;gt; nums2.size()) { std::swap(nums1, nums2); } int m = (int)nums1.size(), n = (int)nums2.size(); // make left get more element if total is odd int totalLeft = (m + n + 1) / 2; int left = 0, right = m; while (left &amp;lt; right) { // make i in the right of the dividing line // that make i also represent amount of left elements int i = left + (right - left + 1) / 2; int j = totalLeft - i; if (nums1[i-1] &amp;gt; nums2[j]) { right = i - 1; // [left, i-1] } else { left = i; // [i, right] } } int i = left; int j = totalLeft - i; int nums1LeftMax = i == 0 ? 1&amp;lt;&amp;lt;31 : nums1[i-1]; int nums2LeftMax = j == 0 ? 1&amp;lt;&amp;lt;31 : nums2[j-1]; int nums1RightMin = i == m ? ~(1&amp;lt;&amp;lt;31) : nums1[i]; int nums2RightMin = j == n ? ~(1&amp;lt;&amp;lt;31) : nums2[j]; if ((m+n) % 2) { return std::max(nums1LeftMax, nums2LeftMax); } return (double)(std::max(nums1LeftMax, nums2LeftMax) + std::min(nums1RightMin, nums2RightMin)) / 2; }};time: O(log(min(m, n)))space: O(1)" }, { "title": "C++ usage", "url": "/posts/C++-usage/", "categories": "C++", "tags": "", "date": "2022-06-17 00:00:00 +0000", "snippet": "overload « cout#include &amp;lt;iostream&amp;gt;class A {public: int a; int b; A(int a_, int b_) {a = a_; b = b_;} friend std::ostream&amp;amp; operator&amp;lt;&amp;lt;(std::ostream&amp;amp; o, A&amp;amp; obj);};std::ostream&amp;amp; operator&amp;lt;&amp;lt;(std::ostream&amp;amp; o, A&amp;amp; obj) { o &amp;lt;&amp;lt; obj.a &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; obj.b &amp;lt;&amp;lt; std::endl; return o;}int main() { A a(3, 4); std::cout &amp;lt;&amp;lt; a; // 3 4}overload ++ –#include &amp;lt;iostream&amp;gt;using namespace std;class A {public: int i; A(int j){ i = j; } A&amp;amp; operator++() { // empty parameter is ++a i++; return *this; // return a reference (orginal object) } A&amp;amp; operator++(int) { // int is a hint for a++ i++; return *this; // return a reference (orginal object) } };int main() { A a(0); ++a; printf(&quot;%d\\n&quot;, a.i); // 1 a++; printf(&quot;%d\\n&quot;, a.i); // 2}virtual keywordVirtual function, binded at runtimeNon-virtual function, binded at compile time#include &amp;lt;iostream&amp;gt;using namespace std;class base{public: virtual void print() { cout &amp;lt;&amp;lt; &quot;print base class\\n&quot;; } void show() { cout &amp;lt;&amp;lt; &quot;show base class\\n&quot;; }};class derived : public base{public: void print() { cout &amp;lt;&amp;lt; &quot;print derived class\\n&quot;; } void show() { cout &amp;lt;&amp;lt; &quot;show derived class\\n&quot;; }};int main(){ base *bptr; derived d; bptr = &amp;amp;d; // Virtual function, binded at runtime bptr-&amp;gt;print(); // print derived class // Non-virtual function, binded at compile time bptr-&amp;gt;show(); // show base class return 0;}" }, { "title": "Linux cmds", "url": "/posts/Linux-cmd/", "categories": "Linux", "tags": "", "date": "2022-06-15 00:00:00 +0000", "snippet": "" }, { "title": "CMU 15-213 Notes", "url": "/posts/CMU-15-213-notes/", "categories": "", "tags": "CMU 15-213", "date": "2022-05-31 00:00:00 +0000", "snippet": "Write-throughWhen a page was modified in cache, it will write to the disk immediately.Write-backWhen a page was kicked out of cache, it write to the disk." }, { "title": "Golang: Slice trap in append", "url": "/posts/golang-slice-trap-append/", "categories": "golang", "tags": "Golang", "date": "2022-05-21 00:00:00 +0000", "snippet": "s1 := []int{0, 1, 2}s2 := append(s1[:0], s1[1:]...)fmt.Println(s1) //[1 2 2] this is the trap, I don&#39;t want to change s1fmt.Println(s2) //[1 2]s1[0] = 666fmt.Println(s1) //[666 2 2] append will not make a new arrayfmt.Println(s2) //[666 2] Solution:s1 := []int{0, 1, 2}s2 := append(append(make([]int, 0, len(s1)), s1[:0]...), s1[1:]...)fmt.Println(s1) //[0 1 2] fmt.Println(s2) //[1 2]make a new array, we always append to the new array." }, { "title": "Golang: Tool package collection", "url": "/posts/golang-tool-package-collection/", "categories": "", "tags": "", "date": "2022-05-20 00:00:00 +0000", "snippet": "Excel operation: https://github.com/qax-os/excelize" }, { "title": "Golang: Mysql Operation", "url": "/posts/golang-mysql-operation/", "categories": "golang", "tags": "", "date": "2022-05-20 00:00:00 +0000", "snippet": "Connectpackage mainimport ( &quot;database/sql&quot; &quot;fmt&quot; _ &quot;github.com/go-sql-driver/mysql&quot;)var db *sql.DBfunc init() { var err error //format: username:password@protocal(host:port)/database db, err = sql.Open(&quot;mysql&quot;, &quot;root:123456@tcp(127.0.0.1:3306)/atguigudb&quot;) if err != nil { //check if the format is right, it won&#39;t check username and password panic(err) } if err := db.Ping(); err != nil { //check if username and password right panic(err) } fmt.Println(&quot;Connected&quot;)}func main() { db.Close()}SelectQueryRow// single result, Scan will close connectionvar m stringsql := &quot;select first_name from employees&quot;db.QueryRow(sql).Scan(&amp;amp;m)Query// multiple results, need rows.Close()var m stringsql := &quot;select first_name from employees&quot;rows, err := db.Query(sql)if err != nil { panic(err)}for rows.Next() { if err := rows.Scan(&amp;amp;m); err != nil { fmt.Println(err) } fmt.Println(m)}rows.Close()Execsql := &quot;insert into dept values (88, 88, 88);&quot;if _, err := db.Exec(sql); err != nil { fmt.Println(err)}Otherdb.SetMaxOpenConns(100)db.SetMaxIdleConns(10)" }, { "title": "Golang: File operation", "url": "/posts/golang-file-operation/", "categories": "Golang", "tags": "", "date": "2022-05-20 00:00:00 +0000", "snippet": "Assume error has been handled.Filename is temp, it is in the same directory.Read a file line by linepackage mainimport ( &quot;bufio&quot; &quot;fmt&quot; &quot;os&quot;)func main() { file, err := os.Open(&quot;nim.asm&quot;) if err != nil { panic(err) } scanner := bufio.NewScanner(file) scanner.Split(bufio.ScanLines) // split by line for { success := scanner.Scan() if success == false { // Error or EOF will false err = scanner.Err() if err == nil { panic(&quot;Scan completed and reached EOF&quot;) } else { panic(err) } } fmt.Println(scanner.Text()) // Bytes() or Text() }}Write bytesO_TRUNC will create a new file to write (compared O_APPEND)package mainimport ( &quot;os&quot;)func main() { file, err := os.OpenFile( &quot;test.txt&quot;, os.O_WRONLY|os.O_TRUNC|os.O_CREATE, 0666, ) if err != nil { panic(err) } defer file.Close() byteSlice := []byte(&quot;Bytes!\\n&quot;) _, err = file.Write(byteSlice) if err != nil { panic(err) }}" }, { "title": "Environment Configuration: Golang in Linux", "url": "/posts/env-config-golang-in-linux/", "categories": "environment configuration", "tags": "", "date": "2022-05-20 00:00:00 +0000", "snippet": "All command use sudo or in su mode. Download installation. wget https://go.dev/dl/go1.18.2.linux-amd64.tar.gz Remove previous Go installation. rm -rf /usr/local/go Unzip installation. tar -C /usr/local -xzf go1.18.2.linux-amd64.tar.gz Add /usr/local/go/bin to the PATH environment variable. vi /etc/profile Add the below cmd into the file. export PATH=$PATH:/usr/local/go/bin execute /etc/profile. source /etc/profile Verify Go version go version You can config GOPROXY for downloading packages faster, for example: go env -w GOPROXY=https://goproxy.cn,direct Reference: https://go.dev/doc/install " }, { "title": "SQL", "url": "/posts/SQL/", "categories": "database", "tags": "", "date": "2022-05-20 00:00:00 +0000", "snippet": "Database named temp.Database operation:create database `temp`;drop database `temp`;Table operation:use `temp`;create table `emp` ( `name` varchar(20); `age` int;);drop table `emp`;Insert operation:insert into `emp`(`name`, `age`)values(&quot;Tim&quot;, 20);" }, { "title": "Linux environment variable", "url": "/posts/Linux-env-variable/", "categories": "Linux", "tags": "", "date": "2022-05-20 00:00:00 +0000", "snippet": "Use export in terminal will create a temporary environmental variable for this terminal.export PATH=$PATH:/usr/local/go/binAdd the above cmd into /etc/profile file is for all users and permanent.And source it will take effect right now.source /etc/profile" } ]
